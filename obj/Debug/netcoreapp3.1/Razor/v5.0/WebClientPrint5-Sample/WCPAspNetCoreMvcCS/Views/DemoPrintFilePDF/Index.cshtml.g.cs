#pragma checksum "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\DemoPrintFilePDF\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fa8d036027a5cd4f9ec84d66196c288e57b578a2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.v5_0_WebClientPrint5_Sample_WCPAspNetCoreMvcCS_Views_DemoPrintFilePDF_Index), @"mvc.1.0.view", @"/v5.0/WebClientPrint5-Sample/WCPAspNetCoreMvcCS/Views/DemoPrintFilePDF/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\_ViewImports.cshtml"
using WCPAspNetCoreMvcCS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\_ViewImports.cshtml"
using WCPAspNetCoreMvcCS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa8d036027a5cd4f9ec84d66196c288e57b578a2", @"/v5.0/WebClientPrint5-Sample/WCPAspNetCoreMvcCS/Views/DemoPrintFilePDF/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7217c38892838b1610ab600866e39b60f4b29808", @"/v5.0/WebClientPrint5-Sample/WCPAspNetCoreMvcCS/Views/_ViewImports.cshtml")]
    public class v5_0_WebClientPrint5_Sample_WCPAspNetCoreMvcCS_Views_DemoPrintFilePDF_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Samples", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-md btn-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\DemoPrintFilePDF\Index.cshtml"
  
    ViewData["Title"] = "Advanced PDF Printing";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            DefineSection("styles", async() => {
                WriteLiteral("\r\n\r\n    <style type=\"text/css\">\r\n        .glyphicon-refresh-animate {\r\n            -animation: spin .7s infinite linear;\r\n            -webkit-animation: spin2 .7s infinite linear;\r\n        }\r\n\r\n        ");
                WriteLiteral("@-webkit-keyframes spin2 {\r\n            from {\r\n                -webkit-transform: rotate(0deg);\r\n            }\r\n\r\n            to {\r\n                -webkit-transform: rotate(360deg);\r\n            }\r\n        }\r\n\r\n        ");
                WriteLiteral("@keyframes spin {\r\n            from {\r\n                transform: scale(1) rotate(0deg);\r\n            }\r\n\r\n            to {\r\n                transform: scale(1) rotate(360deg);\r\n            }\r\n        }\r\n    </style>\r\n\r\n");
            }
            );
            WriteLiteral("\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-12\">\r\n            <h3>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa8d036027a5cd4f9ec84d66196c288e57b578a25918", async() => {
                WriteLiteral("<i class=\"fa fa-chevron-left\"></i>");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"&nbsp;Advanced PDF Printing</h3>
            <p>
                With <strong>WebClientPrint for ASP.NET</strong> solution you can <strong>print PDF files</strong> right to any installed printer at the client side with advanced settings.
            </p>

            <div class=""form-group well"">
                <h4>Click on <strong>""Get Printers Info""</strong> button to get Printers Name, Supported Papers and Trays</h4>
                <div class=""row"">

                    <div class=""col-md-3"">
                        <a onclick=""javascript:jsWebClientPrint.getPrintersInfo(); $('#spinner').css('visibility', 'visible');"" class=""btn btn-success"">Get Printers Info...</a>
                    </div>
                    <div class=""col-md-9"">
                        <h3 id=""spinner"" style=""visibility: hidden""><span class=""label label-info""><span class=""glyphicon glyphicon-refresh glyphicon-refresh-animate""></span>Please wait a few seconds...</span></h3>
                    </div>
                <");
            WriteLiteral(@"/div>

                <div class=""row"">
                    <div class=""col-md-3"">
                        <label for=""lstPrinters"">Printers:</label>
                        <select name=""lstPrinters"" id=""lstPrinters"" onchange=""showSelectedPrinterInfo();"" class=""form-control""></select>
                    </div>
                    <div class=""col-md-3"">
                        <label for=""lstPrinterTrays"">Supported Trays:</label>
                        <select name=""lstPrinterTrays"" id=""lstPrinterTrays"" class=""form-control""></select>
                    </div>
                    <div class=""col-md-3"">
                        <label for=""lstPrinterPapers"">Supported Papers:</label>
                        <select name=""lstPrinterPapers"" id=""lstPrinterPapers"" class=""form-control""></select>
                    </div>
                    <div class=""col-md-3"">
                        <label for=""lstPrintRotation"">Print Rotation (Clockwise):</label>
                        <select name=""lstPrin");
            WriteLiteral("tRotation\" id=\"lstPrintRotation\" class=\"form-control\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa8d036027a5cd4f9ec84d66196c288e57b578a29652", async() => {
                WriteLiteral("None");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa8d036027a5cd4f9ec84d66196c288e57b578a210636", async() => {
                WriteLiteral("Rot90");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa8d036027a5cd4f9ec84d66196c288e57b578a211622", async() => {
                WriteLiteral("Rot180");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa8d036027a5cd4f9ec84d66196c288e57b578a212609", async() => {
                WriteLiteral("Rot270");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </select>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-md-3"">
                        <label for=""txtPagesRange"">Pages Range: [e.g. 1,2,3,10-13]</label>
                        <input type=""text"" class=""form-control"" id=""txtPagesRange"">
                    </div>
                    <div class=""col-md-3"">
                        <div class=""checkbox"">
                            <label><input id=""chkPrintInReverseOrder"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 3805, "\"", 3813, 0);
            EndWriteAttribute();
            WriteLiteral(@">Print In Reverse Order?</label>
                        </div>
                    </div>
                    <div class=""col-md-3"">
                        <div class=""checkbox"">
                            <label id=""lblDriverDuplexPrinting""><input id=""chkDriverDuplexPrinting"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 4115, "\"", 4123, 0);
            EndWriteAttribute();
            WriteLiteral(">Use Driver Duplex Printing?</label>\r\n                        </div>\r\n                        <div class=\"checkbox\">\r\n                            <label><input id=\"chkManualDuplexPrinting\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 4328, "\"", 4336, 0);
            EndWriteAttribute();
            WriteLiteral(@">Use Manual Duplex Printing?</label>
                        </div>
                    </div>
                    <div class=""col-md-3"">
                        <div class=""checkbox"">
                            <label><input id=""chkPrintAnnotations"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 4609, "\"", 4617, 0);
            EndWriteAttribute();
            WriteLiteral(">Print Annotations?</label>\r\n                        </div>\r\n                        <div class=\"checkbox\">\r\n                            <label><input id=\"chkPrintAsGrayscale\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 4809, "\"", 4817, 0);
            EndWriteAttribute();
            WriteLiteral(@">Print As Grayscale?</label>
                        </div>
                    </div>

                </div>
                <div class=""row"">
                    <div class=""col-md-3"">
                        <label for=""lstPrintRotation"">Page Sizing:</label>
                        <select name=""lstPrintRotation"" id=""lstPageSizing"" class=""form-control"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa8d036027a5cd4f9ec84d66196c288e57b578a216267", async() => {
                WriteLiteral("None");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa8d036027a5cd4f9ec84d66196c288e57b578a217252", async() => {
                WriteLiteral("Fit");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <div class=\"checkbox\">\r\n                            <label><input id=\"chkAutoCenter\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 5519, "\"", 5527, 0);
            EndWriteAttribute();
            WriteLiteral(">Auto Center?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <div class=\"checkbox\">\r\n                            <label><input id=\"chkAutoRotate\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 5779, "\"", 5787, 0);
            EndWriteAttribute();
            WriteLiteral(@">Auto Rotate?</label>
                        </div>
                    </div>
                </div>
                <div class=""row"">

                    <div class=""col-md-12"">
                        <a class=""btn btn-success btn-lg pull-right"" onclick=""javascript:jsWebClientPrint.print('printerName=' + encodeURIComponent($('#lstPrinters').val()) + '&trayName=' + encodeURIComponent($('#lstPrinterTrays').val()) + '&paperName=' + encodeURIComponent($('#lstPrinterPapers').val()) + '&printRotation=' + $('#lstPrintRotation').val() + '&pagesRange=' + encodeURIComponent($('#txtPagesRange').val()) + '&printAnnotations=' + $('#chkPrintAnnotations').prop('checked') + '&printAsGrayscale=' + $('#chkPrintAsGrayscale').prop('checked') + '&printInReverseOrder=' + $('#chkPrintInReverseOrder').prop('checked') + '&manualDuplexPrinting=' + $('#chkManualDuplexPrinting').prop('checked') + '&driverDuplexPrinting=' + ($('#chkDriverDuplexPrinting').prop('disabled') ? 'false' : $('#chkDriverDuplexPrinting').prop('checked");
            WriteLiteral(@"')) + '&pageSizing=' + $('#lstPageSizing').val() + '&autoRotate=' + ($('#chkAutoRotate').prop('disabled') ? 'false' : $('#chkAutoRotate').prop('checked')) + '&autoCenter=' + ($('#chkAutoCenter').prop('disabled') ? 'false' : $('#chkAutoCenter').prop('checked')));""><strong>Print PDF...</strong></a>
                    </div>
                </div>
                <hr />
                <h4>PDF File Sample Preview - <strong>13 Pages</strong></h4>
                <iframe id=""ifPreview"" style=""width: 100%; height: 500px;"" frameborder=""0"" src=""//docs.google.com/gview?url=http://webclientprint.azurewebsites.net/files/mixed-page-orientation.pdf&embedded=true""></iframe>

            </div>

        </div>


    </div>
</div>


<script type=""text/javascript"">

    var clientPrinters = null;

    var wcppGetPrintersTimeout_ms = 60000; //60 sec
    var wcppGetPrintersTimeoutStep_ms = 500; //0.5 sec
    function wcpGetPrintersOnSuccess() {
        $('#spinner').css('visibility', 'hidden');
        ");
            WriteLiteral(@"// Display client installed printers
        if (arguments[0].length > 0) {
            if (JSON) {
                try {
                    clientPrinters = JSON.parse(arguments[0]);
                    if (clientPrinters.error) {
                        alert(clientPrinters.error)
                    } else {
                        var options = '';
                        for (var i = 0; i < clientPrinters.length; i++) {
                            options += '<option>' + clientPrinters[i].name + '</option>';
                        }
                        $('#lstPrinters').html(options);
                        $('#lstPrinters').focus();

                        showSelectedPrinterInfo();
                    }
                } catch (e) {
                    alert(e.message)
                }
            }


        } else {
            alert(""No printers are installed in your system."");
        }
    }
    function wcpGetPrintersOnFailure() {
        $('#spinner').css('vi");
            WriteLiteral(@"sibility', 'hidden');
        // Do something if printers cannot be got from the client
        alert(""No printers are installed in your system."");
    }


    function showSelectedPrinterInfo() {
        // get selected printer index
        var idx = $(""#lstPrinters"")[0].selectedIndex;
        // get supported trays
        var options = '';
        if (clientPrinters[idx].trays) {
            for (var i = 0; i < clientPrinters[idx].trays.length; i++) {
                options += '<option>' + clientPrinters[idx].trays[i] + '</option>';
            }
        }
        $('#lstPrinterTrays').html(options);
        // get supported papers
        options = '';
        if (clientPrinters[idx].papers) {
            for (var i = 0; i < clientPrinters[idx].papers.length; i++) {
                options += '<option>' + clientPrinters[idx].papers[i] + '</option>';
            }
        }
        $('#lstPrinterPapers').html(options);

        // update duplex option
        $('#chkDriverDuple");
            WriteLiteral(@"xPrinting').attr('checked', clientPrinters[idx].duplex);
        $('#chkDriverDuplexPrinting').attr('disabled', !clientPrinters[idx].duplex);
        $('#lblDriverDuplexPrinting').attr('style', clientPrinters[idx].duplex ? '' : 'text-decoration: line-through;');

    }

</script>




");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n\r\n");
                WriteLiteral("\r\n    ");
#nullable restore
#line 227 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\DemoPrintFilePDF\Index.cshtml"
Write(Html.Raw(ViewData["WCPScript"]));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
