#pragma checksum "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\DemoPrintCommands\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b7cf098d15041ac15cb066c9ae9607ad104d1dd4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.v5_0_WebClientPrint5_Sample_WCPAspNetCoreMvcCS_Views_DemoPrintCommands_Index), @"mvc.1.0.view", @"/v5.0/WebClientPrint5-Sample/WCPAspNetCoreMvcCS/Views/DemoPrintCommands/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\_ViewImports.cshtml"
using WCPAspNetCoreMvcCS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\_ViewImports.cshtml"
using WCPAspNetCoreMvcCS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b7cf098d15041ac15cb066c9ae9607ad104d1dd4", @"/v5.0/WebClientPrint5-Sample/WCPAspNetCoreMvcCS/Views/DemoPrintCommands/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7217c38892838b1610ab600866e39b60f4b29808", @"/v5.0/WebClientPrint5-Sample/WCPAspNetCoreMvcCS/Views/_ViewImports.cshtml")]
    public class v5_0_WebClientPrint5_Sample_WCPAspNetCoreMvcCS_Views_DemoPrintCommands_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Samples", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-md btn-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("selected", new global::Microsoft.AspNetCore.Html.HtmlString("selected"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("myForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\DemoPrintCommands\Index.cshtml"
  
    ViewData["Title"] = "Printing RAW Commands";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("styles", async() => {
                WriteLiteral(@"

    <style type=""text/css"">
        fieldset {
            width: 700px;
            border: 0 none #ffffff;
        }

        legend {
            visibility: hidden;
        }

        label {
            display: block;
            margin: 15px 0 5px;
        }

        input[type=text], input[type=password] {
            width: 300px;
            padding: 5px;
            border: solid 1px #000;
        }

        .prev {
            float: left;
        }

        .next {
            float: right;
        }

        #steps {
            list-style: none;
            width: 100%;
            overflow: hidden;
            margin: 0px;
            padding: 0px;
        }

            #steps li {
                font-size: 24px;
                float: left;
                padding: 10px;
                color: #b0b1b3;
            }

                #steps li span {
                    font-size: 11px;
                    display: block;
                }
");
                WriteLiteral("\r\n                #steps li.current {\r\n                    color: #000;\r\n                }\r\n    </style>\r\n\r\n");
            }
            );
            WriteLiteral("\r\n<h3>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd49246", async() => {
                WriteLiteral("<i class=\"fa fa-chevron-left\"></i>");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("&nbsp;Print Raw/Text Commands</h3>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd410822", async() => {
                WriteLiteral("\r\n\r\n");
                WriteLiteral("            <input type=\"hidden\" id=\"sid\" name=\"sid\"");
                BeginWriteAttribute("value", " value=\"", 1550, "\"", 1599, 1);
#nullable restore
#line 70 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\DemoPrintCommands\Index.cshtml"
WriteAttributeValue("", 1558, Url.ActionContext.HttpContext.Session.Id, 1558, 41, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n");
                WriteLiteral(@"            <fieldset>
                <legend>Client Printer Settings</legend>

                <div>
                    WebClientPrint does support all common printer communications like USB-Installed
                    Drivers, Network/IP-Ethernet, Serial COM-RS232 and Parallel (LPT).
                    <br />
                    <br />
                    I want to:&nbsp;&nbsp;
                    <select id=""pid"" name=""pid"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd412149", async() => {
                    WriteLiteral("Use Default Printer");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd413497", async() => {
                    WriteLiteral("Display a Printer dialog");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd414763", async() => {
                    WriteLiteral("Use an installed Printer");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd416029", async() => {
                    WriteLiteral("Use an IP/Etherner Printer");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd417297", async() => {
                    WriteLiteral("Use a LPT port");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd418553", async() => {
                    WriteLiteral("Use a RS232 (COM) port");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                    <br />
                    <br />
                    <div id=""info"" class=""alert alert-info"" style=""font-size:11px;""></div>
                    <br />
                </div>

                <div id=""installedPrinter"">
                    <div id=""loadPrinters"" name=""loadPrinters"">
                        WebClientPrint can detect the installed printers in your machine. <a onclick=""javascript:jsWebClientPrint.getPrinters();"" class=""btn btn-success"">Load installed printers...</a>
                        <br /><br />
                    </div>
                    <label for=""installedPrinterName"">Select an installed Printer:</label>
                    <select name=""installedPrinterName"" id=""installedPrinterName""></select>


                    <script type=""text/javascript"">
                        //var wcppGetPrintersDelay_ms = 5000; //5 sec

                        var wcppGetPrintersTimeout_ms = 60000; //60 sec
                       ");
                WriteLiteral(" var wcppGetPrintersTimeoutStep_ms = 500; //0.5 sec\r\n\r\n                        function wcpGetPrintersOnSuccess() {\r\n");
                WriteLiteral(@"                            if (arguments[0].length > 0) {
                                var p = arguments[0].split(""|"");
                                var options = '';
                                for (var i = 0; i < p.length; i++) {
                                    options += '<option>' + p[i] + '</option>';
                                }
                                $('#installedPrinterName').html(options);
                                $('#installedPrinterName').focus();
                                $('#loadPrinters').hide();
                            } else {
                                alert(""No printers are installed in your system."");
                            }
                        }

                        function wcpGetPrintersOnFailure() {
");
                WriteLiteral(@"                            alert(""No printers are installed in your system."");
                        }
                    </script>

                </div>

                <div id=""netPrinter"">
                    <label for=""netPrinterHost"">Printer's DNS Name or IP Address:</label>
                    <input type=""text"" name=""netPrinterHost"" id=""netPrinterHost"" />
                    <label for=""netPrinterPort"">Printer's Port:</label>
                    <input type=""text"" name=""netPrinterPort"" id=""netPrinterPort"" />
                </div>

                <div id=""parallelPrinter"">
                    <label for=""parallelPort"">Parallel Port:</label>
                    <input type=""text"" name=""parallelPort"" id=""parallelPort"" value=""LPT1"" />
                </div>

                <div id=""serialPrinter"">
                    <table border=""0"">
                        <tr>
                            <td valign=""top"">
                                <label for=""serialPort"">Serial Po");
                WriteLiteral(@"rt:</label>
                                <input type=""text"" name=""serialPort"" id=""serialPort"" value=""COM1"" />
                                <label for=""serialPortBauds"">Baud Rate:</label>
                                <input type=""text"" name=""serialPortBauds"" id=""serialPortBauds"" value=""9600"" />
                                <label for=""serialPortDataBits"">Data Bits:</label>
                                <input type=""text"" name=""serialPortDataBits"" id=""serialPortDataBits"" value=""8"" />
                            </td>
                            <td style=""width:30px;""></td>
                            <td valign=""top"">
                                <label for=""serialPortParity"">Parity:</label>
                                <select id=""serialPortParity"" name=""serialPortParity"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd423873", async() => {
                    WriteLiteral("None");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd425009", async() => {
                    WriteLiteral("Odd");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd426057", async() => {
                    WriteLiteral("Even");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd427106", async() => {
                    WriteLiteral("Mark");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd428155", async() => {
                    WriteLiteral("Space");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </select>

                                <label for=""serialPortStopBits"">Stop Bits:</label>
                                <select id=""serialPortStopBits"" name=""serialPortStopBits"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd429431", async() => {
                    WriteLiteral("One");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd430566", async() => {
                    WriteLiteral("Two");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd431614", async() => {
                    WriteLiteral("OnePointFive");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </select>

                                <label for=""serialPortFlowControl"">Flow Control:</label>
                                <select id=""serialPortFlowControl"" name=""serialPortFlowControl"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd432909", async() => {
                    WriteLiteral("None");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd434045", async() => {
                    WriteLiteral("XOnXOff");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd435097", async() => {
                    WriteLiteral("RequestToSend");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7cf098d15041ac15cb066c9ae9607ad104d1dd436155", async() => {
                    WriteLiteral("RequestToSendXOnXOff");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </select>
                            </td>
                        </tr>
                    </table>


                </div>

            </fieldset>
            <fieldset>
                <legend>Printer Commands</legend>

                <p>
                    Enter the printer's commands you want to send and is supported by the specified printer (ESC/P, PCL, ZPL, EPL, DPL, IPL, EZPL, etc).
                    <br /><br />
                    <b>NOTE:</b> You can use the <b>hex notation of VB or C# for non-printable characters</b> e.g. for Carriage Return (ASCII 13) you could use &H0D or 0x0D
                </p>

                <textarea id=""printerCommands"" name=""printerCommands"" rows=""10"" cols=""80"" class=""form-control"" style=""min-width: 100%""></textarea>
                <br /><br />
                <div class=""alert alert-info"" style=""font-size:11px;"">
                    <b>Upload Files</b><br />
                    This online demo does not a");
                WriteLiteral(@"llow you to upload files. So, if you have a file containing the printer commands like a PRN file, Postscript, PCL, ZPL, etc, then we recommend you to <a href=""//neodynamic.com/products/printing/raw-data/aspnet-core/download/"" target=""_blank"">download WebClientPrint</a> and test it by using the sample source code included in the package. Feel free to <a href=""http://www.neodynamic.com/support"" target=""_blank"">contact our Tech Support</a> for further assistance, help, doubts or questions.
                </div>
            </fieldset>
            <fieldset>
                <legend>Ready to print!</legend>
                <h3>Your settings were saved! Now it's time to <a href=""#"" onclick=""javascript:doClientPrint();"" class=""btn btn-large btn-success"">Print</a></h3>
                <br /><br />
            </fieldset>

        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n\r\n\r\n");
                WriteLiteral("\r\n            ");
#nullable restore
#line 224 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPAspNetCoreMvcCS\Views\DemoPrintCommands\Index.cshtml"
       Write(Html.Raw(ViewData["WCPScript"]));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";


            <script type=""text/javascript"">

                function doClientPrint() {

                    //collect printer settings and raw commands
                    var printerSettings = $(""#myForm"").serialize();

                    //store printer settings in the server cache...
                    $.post('DemoPrintCommands/ClientPrinterSettings',
                        printerSettings
                    );

                    // Launch WCPP at the client side for printing...
                    var sessionId = $(""#sid"").val();
                    jsWebClientPrint.print('sid=' + sessionId);

                }


                $(document).ready(function () {
                    //jQuery-based Wizard
                    $(""#myForm"").formToWizard();

                    //change printer options based on user selection
                    $(""#pid"").change(function () {
                        var printerId = $(""select#pid"").val();

                        displayInf");
                WriteLiteral(@"o(printerId);
                        hidePrinters();
                        if (printerId == 2)
                            $(""#installedPrinter"").show();
                        else if (printerId == 3)
                            $(""#netPrinter"").show();
                        else if (printerId == 4)
                            $(""#parallelPrinter"").show();
                        else if (printerId == 5)
                            $(""#serialPrinter"").show();
                    });

                    hidePrinters();
                    displayInfo(0);


                });

                function displayInfo(i) {
                    if (i == 0)
                        $(""#info"").html('This will make the WCPP to send the commands to the printer installed in your machine as ""Default Printer"" without displaying any dialog!');
                    else if (i == 1)
                        $(""#info"").html('This will make the WCPP to display the Printer dialog so you can select which");
                WriteLiteral(@" printer you want to use.');
                    else if (i == 2)
                        $(""#info"").html('Please specify the <b>Printer\'s Name</b> as it figures installed under your system.');
                    else if (i == 3)
                        $(""#info"").html('Please specify the Network Printer info.<br /><strong>On Linux &amp; Mac</strong> it\'s recommended you install the printer through <strong>CUPS</strong> and set the assigned printer name to the <strong>""Use an installed Printer""</strong> option on this demo.');
                    else if (i == 4)
                        $(""#info"").html('Please specify the Parallel Port which your printer is connected to.<br /><strong>On Linux &amp; Mac</strong> you must install the printer through <strong>CUPS</strong> and set the assigned printer name to the <strong>""Use an installed Printer""</strong> option on this demo.');
                    else if (i == 5)
                        $(""#info"").html('Please specify the Serial RS232 Port info whic");
                WriteLiteral(@"h your printer does support.<br /><strong>On Linux &amp; Mac</strong> you must install the printer through <strong>CUPS</strong> and set the assigned printer name to the <strong>""Use an installed Printer""</strong> option on this demo.');
                }

                function hidePrinters() {
                    $(""#installedPrinter"").hide(); $(""#netPrinter"").hide(); $(""#parallelPrinter"").hide(); $(""#serialPrinter"").hide();
                }




                /* FORM to WIZARD */
                /* Created by jankoatwarpspeed.com */

                (function ($) {
                    $.fn.formToWizard = function () {

                        var element = this;

                        var steps = $(element).find(""fieldset"");
                        var count = steps.length;


                        // 2
                        $(element).before(""<ul id='steps'></ul>"");

                        steps.each(function (i) {
                            $(this).wrap(""<div id='step");
                WriteLiteral(@""" + i + ""'></div>"");
                            $(this).append(""<p id='step"" + i + ""commands'></p>"");

                            // 2
                            var name = $(this).find(""legend"").html();
                            $(""#steps"").append(""<li id='stepDesc"" + i + ""'>Step "" + (i + 1) + ""<span>"" + name + ""</span></li>"");

                            if (i == 0) {
                                createNextButton(i);
                                selectStep(i);
                            }
                            else if (i == count - 1) {
                                $(""#step"" + i).hide();
                                createPrevButton(i);
                            }
                            else {
                                $(""#step"" + i).hide();
                                createPrevButton(i);
                                createNextButton(i);
                            }
                        });

                        function createPrevBu");
                WriteLiteral(@"tton(i) {
                            var stepName = ""step"" + i;
                            $(""#"" + stepName + ""commands"").append(""<a href='#' id='"" + stepName + ""Prev' class='prev btn btn-info'>< Back</a>"");

                            $(""#"" + stepName + ""Prev"").bind(""click"", function (e) {
                                $(""#"" + stepName).hide();
                                $(""#step"" + (i - 1)).show();

                                selectStep(i - 1);
                            });
                        }

                        function createNextButton(i) {
                            var stepName = ""step"" + i;
                            $(""#"" + stepName + ""commands"").append(""<a href='#' id='"" + stepName + ""Next' class='next btn btn-info'>Next ></a>"");

                            $(""#"" + stepName + ""Next"").bind(""click"", function (e) {
                                $(""#"" + stepName).hide();
                                $(""#step"" + (i + 1)).show();

                   ");
                WriteLiteral(@"             selectStep(i + 1);
                            });
                        }

                        function selectStep(i) {
                            $(""#steps li"").removeClass(""current"");
                            $(""#stepDesc"" + i).addClass(""current"");
                        }

                    }
                })(jQuery);

            </script>


        ");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
