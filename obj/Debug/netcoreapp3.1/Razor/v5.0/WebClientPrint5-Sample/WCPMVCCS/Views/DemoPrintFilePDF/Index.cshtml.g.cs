#pragma checksum "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPMVCCS\Views\DemoPrintFilePDF\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bb5f1607f2002342e507288df674d0364fc09dcb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.v5_0_WebClientPrint5_Sample_WCPMVCCS_Views_DemoPrintFilePDF_Index), @"mvc.1.0.view", @"/v5.0/WebClientPrint5-Sample/WCPMVCCS/Views/DemoPrintFilePDF/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bb5f1607f2002342e507288df674d0364fc09dcb", @"/v5.0/WebClientPrint5-Sample/WCPMVCCS/Views/DemoPrintFilePDF/Index.cshtml")]
    public class v5_0_WebClientPrint5_Sample_WCPMVCCS_Views_DemoPrintFilePDF_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPMVCCS\Views\DemoPrintFilePDF\Index.cshtml"
  
    ViewBag.Title = "Advanced PDF Printing";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container"">
    <div class=""row"">

        <div class=""col-md-12"">
            <h3><a href=""/home/samples"" class=""btn btn-md btn-danger""><i class=""fa fa-chevron-left""></i></a>&nbsp;Advanced PDF Printing</h3>
            <p>
                With <strong>WebClientPrint for ASP.NET</strong> solution you can <strong>print PDF files</strong> right to any installed printer at the client side with advanced settings.
            </p>

            <div class=""form-group well"">
                <h4>Click on <strong>""Get Printers Info""</strong> button to get Printers Name, Supported Papers and Trays</h4>
                <div class=""row"">

                    <div class=""col-md-3"">
                        <a onclick=""javascript:jsWebClientPrint.getPrintersInfo(); $('#spinner').css('visibility', 'visible');"" class=""btn btn-success"">Get Printers Info...</a>
                    </div>
                    <div class=""col-md-9"">
                        <h3 id=""spinner"" style=""visibility: hidden"">");
            WriteLiteral(@"<span class=""label label-info""><span class=""glyphicon glyphicon-refresh glyphicon-refresh-animate""></span>Please wait a few seconds...</span></h3>
                    </div>
                </div>

                <div class=""row"">
                    <div class=""col-md-3"">
                        <label for=""lstPrinters"">Printers:</label>
                        <select name=""lstPrinters"" id=""lstPrinters"" onchange=""showSelectedPrinterInfo();"" class=""form-control""></select>
                    </div>
                    <div class=""col-md-3"">
                        <label for=""lstPrinterTrays"">Supported Trays:</label>
                        <select name=""lstPrinterTrays"" id=""lstPrinterTrays"" class=""form-control""></select>
                    </div>
                    <div class=""col-md-3"">
                        <label for=""lstPrinterPapers"">Supported Papers:</label>
                        <select name=""lstPrinterPapers"" id=""lstPrinterPapers"" class=""form-control""></select>
               ");
            WriteLiteral(@"     </div>
                    <div class=""col-md-3"">
                        <label for=""lstPrintRotation"">Print Rotation (Clockwise):</label>
                        <select name=""lstPrintRotation"" id=""lstPrintRotation"" class=""form-control"">
                            <option>None</option>
                            <option>Rot90</option>
                            <option>Rot180</option>
                            <option>Rot270</option>
                        </select>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-md-3"">
                        <label for=""txtPagesRange"">Pages Range: [e.g. 1,2,3,10-13]</label>
                        <input type=""text"" class=""form-control"" id=""txtPagesRange"">
                    </div>
                    <div class=""col-md-3"">
                        <div class=""checkbox"">
                            <label><input id=""chkPrintInReverseOrder"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 3109, "\"", 3117, 0);
            EndWriteAttribute();
            WriteLiteral(@">Print In Reverse Order?</label>
                        </div>
                    </div>
                    <div class=""col-md-3"">
                        <div class=""checkbox"">
                            <label id=""lblDriverDuplexPrinting""><input id=""chkDriverDuplexPrinting"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 3419, "\"", 3427, 0);
            EndWriteAttribute();
            WriteLiteral(">Use Driver Duplex Printing?</label>\r\n                        </div>\r\n                        <div class=\"checkbox\">\r\n                            <label><input id=\"chkManualDuplexPrinting\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 3632, "\"", 3640, 0);
            EndWriteAttribute();
            WriteLiteral(@">Use Manual Duplex Printing?</label>
                        </div>
                    </div>
                    <div class=""col-md-3"">
                        <div class=""checkbox"">
                            <label><input id=""chkPrintAnnotations"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 3913, "\"", 3921, 0);
            EndWriteAttribute();
            WriteLiteral(">Print Annotations?</label>\r\n                        </div>\r\n                        <div class=\"checkbox\">\r\n                            <label><input id=\"chkPrintAsGrayscale\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 4113, "\"", 4121, 0);
            EndWriteAttribute();
            WriteLiteral(@">Print As Grayscale?</label>
                        </div>
                    </div>

                </div>
                <div class=""row"">
                    <div class=""col-md-3"">
                        <label for=""lstPrintRotation"">Page Sizing:</label>
                        <select name=""lstPrintRotation"" id=""lstPageSizing"" class=""form-control"">
                            <option>None</option>
                            <option>Fit</option>
                        </select>
                    </div>
                    <div class=""col-md-3"">
                        <div class=""checkbox"">
                            <label><input id=""chkAutoCenter"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 4823, "\"", 4831, 0);
            EndWriteAttribute();
            WriteLiteral(">Auto Center?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <div class=\"checkbox\">\r\n                            <label><input id=\"chkAutoRotate\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 5083, "\"", 5091, 0);
            EndWriteAttribute();
            WriteLiteral(@">Auto Rotate?</label>
                        </div>
                    </div>
                </div>
                <div class=""row"">

                    <div class=""col-md-12"">
                        <a class=""btn btn-success btn-lg pull-right"" onclick=""javascript:jsWebClientPrint.print('printerName=' + encodeURIComponent($('#lstPrinters').val()) + '&trayName=' + encodeURIComponent($('#lstPrinterTrays').val()) + '&paperName=' + encodeURIComponent($('#lstPrinterPapers').val()) + '&printRotation=' + $('#lstPrintRotation').val() + '&pagesRange=' + encodeURIComponent($('#txtPagesRange').val()) + '&printAnnotations=' + $('#chkPrintAnnotations').prop('checked') + '&printAsGrayscale=' + $('#chkPrintAsGrayscale').prop('checked') + '&printInReverseOrder=' + $('#chkPrintInReverseOrder').prop('checked') + '&manualDuplexPrinting=' + $('#chkManualDuplexPrinting').prop('checked') + '&driverDuplexPrinting=' + ($('#chkDriverDuplexPrinting').prop('disabled') ? 'false' : $('#chkDriverDuplexPrinting').prop('checked");
            WriteLiteral(@"')) + '&pageSizing=' + $('#lstPageSizing').val() + '&autoRotate=' + ($('#chkAutoRotate').prop('disabled') ? 'false' : $('#chkAutoRotate').prop('checked')) + '&autoCenter=' + ($('#chkAutoCenter').prop('disabled') ? 'false' : $('#chkAutoCenter').prop('checked')));""><strong>Print PDF...</strong></a>
                    </div>
                </div>
                <hr />
                <h4>PDF File Sample Preview - <strong>13 Pages</strong></h4>
                <iframe id=""ifPreview"" style=""width: 100%; height: 500px;"" frameborder=""0"" src=""//docs.google.com/gview?url=http://webclientprint.azurewebsites.net/files/mixed-page-orientation.pdf&embedded=true""></iframe>

            </div>

        </div>


    </div>
</div>


<script type=""text/javascript"">

        var clientPrinters = null;

        var wcppGetPrintersTimeout_ms = 60000; //60 sec
        var wcppGetPrintersTimeoutStep_ms = 500; //0.5 sec
        function wcpGetPrintersOnSuccess() {
            $('#spinner').css('visibility', ");
            WriteLiteral(@"'hidden');
            // Display client installed printers
            if (arguments[0].length > 0) {
                if (JSON) {
                    try {
                        clientPrinters = JSON.parse(arguments[0]);
                        if (clientPrinters.error) {
                            alert(clientPrinters.error)
                        } else {
                            var options = '';
                            for (var i = 0; i < clientPrinters.length; i++) {
                                options += '<option>' + clientPrinters[i].name + '</option>';
                            }
                            $('#lstPrinters').html(options);
                            $('#lstPrinters').focus();

                            showSelectedPrinterInfo();
                        }
                    } catch (e) {
                        alert(e.message)
                    }
                }


            } else {
                alert(""No printers are installed i");
            WriteLiteral(@"n your system."");
            }
        }
        function wcpGetPrintersOnFailure() {
            $('#spinner').css('visibility', 'hidden');
            // Do something if printers cannot be got from the client
            alert(""No printers are installed in your system."");
        }


        function showSelectedPrinterInfo() {
            // get selected printer index
            var idx = $(""#lstPrinters"")[0].selectedIndex;
            // get supported trays
            var options = '';
            if (clientPrinters[idx].trays) {
                for (var i = 0; i < clientPrinters[idx].trays.length; i++) {
                    options += '<option>' + clientPrinters[idx].trays[i] + '</option>';
                }
            }
            $('#lstPrinterTrays').html(options);
            // get supported papers
            options = '';
            if (clientPrinters[idx].papers) {
                for (var i = 0; i < clientPrinters[idx].papers.length; i++) {
                    opti");
            WriteLiteral(@"ons += '<option>' + clientPrinters[idx].papers[i] + '</option>';
                }
            }
            $('#lstPrinterPapers').html(options);

            // update duplex option
            $('#chkDriverDuplexPrinting').attr('checked', clientPrinters[idx].duplex);
            $('#chkDriverDuplexPrinting').attr('disabled', !clientPrinters[idx].duplex);
            $('#lblDriverDuplexPrinting').attr('style', clientPrinters[idx].duplex ? '' : 'text-decoration: line-through;');

        }

</script>


");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n\r\n");
                WriteLiteral("\r\n    ");
#nullable restore
#line 192 "D:\Demo\Demo Print\Report-Export-DinkToPdf\v5.0\WebClientPrint5-Sample\WCPMVCCS\Views\DemoPrintFilePDF\Index.cshtml"
Write(Html.Raw(ViewBag.WCPScript));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
